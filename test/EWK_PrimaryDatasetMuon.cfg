# Primary dataset Muon

# CSA07 Skim for Z-->MuMu
# Filter events with HLT: sigle muon, double muon, isolated and not, ztomumu
# then produces AODSIM selected events
# Created by Luca Lista, Nicola De Filippis
# Tested on 2007/07/06/

# CSA07 Skim for Z-->TauTau -->Mu + Tau jet Events
# Filter events with HLT
# then produces AODSIM selected events
# Created by Letizia Lusito
# Tested on 2007/07/06/

# CSA07 Skim for W->MuNu Events
# then produces AODSIM selected events
# Created by Ezio Torassa
# Adapated to HLT by Juan Alcaraz
# Tested on 2007/07/23/ by E.T.

# CSA07 Skim for  Z-->TauTau -->EMu Events
# Filter events with HLT
# then produces RECOSIM selected events
# Created by Kajari MazumDar
# Tested on 2007/07/06/

process TestZToMuMuReco = {
  include "FWCore/MessageLogger/data/MessageLogger.cfi" 
  include "ElectroWeakAnalysis/ZReco/data/zToMuMu_SkimPaths.cff"
  include "ElectroWeakAnalysis/ZReco/data/zToMuMuOutputModule.cfi"
  include "ElectroWeakAnalysis/ZReco/data/zToTauTau_MuTau_SkimPaths.cff"
  include "ElectroWeakAnalysis/ZReco/data/zToTauTau_MuTauOutputModule.cfi"
  include "ElectroWeakAnalysis/WReco/data/wToMuNu_SkimPaths.cff"
  include "ElectroWeakAnalysis/WReco/data/wToMuNuOutputModule.cfi"
  include "ElectroWeakAnalysis/ZReco/data/zToTauTau_EMu_SkimPaths.cff"
  include "ElectroWeakAnalysis/ZReco/data/zToTauTau_EMuOutputModule.cfi"


  untracked PSet options = {
        untracked bool wantSummary = true  # default is false
  }

  service = AdaptorConfig {}

  untracked PSet configurationMetadata = {
    untracked string version = "$Revision$"
    untracked string name = "$Source$"
    untracked string annotation = "CSA07 Skim for  Z-->MuMu, Z-->TauTau -->Mu + Tau jet, W->MuNu, Z-->TauTau -->EMu Events "
  }

  untracked PSet maxEvents = { 
    untracked int32 input = 100 
  }

  source = PoolSource {
    untracked vstring fileNames = {
      'castor:/castor/cern.ch/cms/store/RelVal/2007/8/12/RelVal-RelVal145Z-MM-1186939663/0003/3E085A39-FF48-DC11-A9E9-000E0C3F08F6.root'
    }
  }

  module evtInfo = AsciiOutputModule {
  }

  endpath end1 = { 
    evtInfo, zToMuMuOutputModuleAODSIM 
  }
	
  endpath end2 = {
    evtInfo, zToMuMuOutputModuleRECOSIM
  }

  endpath end3 = { 
    evtInfo, zToTauTau_MuTauOutputModuleAODSIM
  }

  endpath end4 = {
        evtInfo, wToMuNuOutputModule
  }

  endpath end5 = { 
    evtInfo, zToTauTau_EMuOutputModuleRECOSIM 
  }


}
